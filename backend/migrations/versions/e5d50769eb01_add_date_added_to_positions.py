"""add_date_added_to_positions

Revision ID: e5d50769eb01
Revises: ef7c9bbbced4
Create Date: 2025-10-03 23:33:19.784418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e5d50769eb01'
down_revision: Union[str, None] = 'ef7c9bbbced4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('portfolio_valuations_eod', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('portfolio_valuations_eod', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('positions', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.add_column('prices', sa.Column('ts', sa.DateTime(), nullable=False))
    op.add_column('prices', sa.Column('close', sa.Float(), nullable=False))
    op.alter_column('prices', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('prices_symbol_date_key', 'prices', type_='unique')
    op.create_index('ix_price_symbol_ts', 'prices', ['symbol', 'ts'], unique=False)
    op.create_index(op.f('ix_prices_symbol'), 'prices', ['symbol'], unique=False)
    op.create_unique_constraint('uq_price_symbol_ts', 'prices', ['symbol', 'ts'])
    op.drop_column('prices', 'close_price')
    op.drop_column('prices', 'date')
    op.alter_column('prices_eod', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('prices_eod', 'open',
               existing_type=sa.NUMERIC(precision=20, scale=8),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('prices_eod', 'high',
               existing_type=sa.NUMERIC(precision=20, scale=8),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('prices_eod', 'low',
               existing_type=sa.NUMERIC(precision=20, scale=8),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('prices_eod', 'close',
               existing_type=sa.NUMERIC(precision=20, scale=8),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('prices_eod', 'volume',
               existing_type=sa.BIGINT(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('prices_eod', 'ingested_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               nullable=False)
    op.drop_constraint('prices_eod_symbol_date_key', 'prices_eod', type_='unique')
    op.create_index('ix_price_eod_date', 'prices_eod', ['date'], unique=False)
    op.create_index('ix_price_eod_symbol_date', 'prices_eod', ['symbol', 'date'], unique=False)
    op.create_index(op.f('ix_prices_eod_symbol'), 'prices_eod', ['symbol'], unique=False)
    op.create_unique_constraint('uq_price_eod_symbol_date', 'prices_eod', ['symbol', 'date'])
    op.alter_column('strategies', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('strategies', 'base_currency',
               existing_type=sa.VARCHAR(length=3),
               server_default=None,
               existing_nullable=True)
    op.alter_column('strategies', 'created_at',
               existing_type=sa.NUMERIC(precision=24, scale=8),
               server_default=None,
               existing_nullable=False)
    op.alter_column('strategies', 'updated_at',
               existing_type=sa.NUMERIC(precision=24, scale=8),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_strategies_user_id', table_name='strategies')
    op.create_index('idx_strategies_user_id', 'strategies', ['user_id'], unique=True)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'usd_balance',
               existing_type=sa.NUMERIC(precision=20, scale=8),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'usd_balance',
               existing_type=sa.NUMERIC(precision=20, scale=8),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    op.drop_index('idx_strategies_user_id', table_name='strategies')
    op.create_index('idx_strategies_user_id', 'strategies', ['user_id'], unique=False)
    op.alter_column('strategies', 'updated_at',
               existing_type=sa.NUMERIC(precision=24, scale=8),
               server_default=sa.text('EXTRACT(epoch FROM now())'),
               existing_nullable=False)
    op.alter_column('strategies', 'created_at',
               existing_type=sa.NUMERIC(precision=24, scale=8),
               server_default=sa.text('EXTRACT(epoch FROM now())'),
               existing_nullable=False)
    op.alter_column('strategies', 'base_currency',
               existing_type=sa.VARCHAR(length=3),
               server_default=sa.text("'USD'::character varying"),
               existing_nullable=True)
    op.alter_column('strategies', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    op.drop_constraint('uq_price_eod_symbol_date', 'prices_eod', type_='unique')
    op.drop_index(op.f('ix_prices_eod_symbol'), table_name='prices_eod')
    op.drop_index('ix_price_eod_symbol_date', table_name='prices_eod')
    op.drop_index('ix_price_eod_date', table_name='prices_eod')
    op.create_unique_constraint('prices_eod_symbol_date_key', 'prices_eod', ['symbol', 'date'])
    op.alter_column('prices_eod', 'ingested_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               nullable=True)
    op.alter_column('prices_eod', 'volume',
               existing_type=sa.Float(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('prices_eod', 'close',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=20, scale=8),
               existing_nullable=False)
    op.alter_column('prices_eod', 'low',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=20, scale=8),
               existing_nullable=True)
    op.alter_column('prices_eod', 'high',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=20, scale=8),
               existing_nullable=True)
    op.alter_column('prices_eod', 'open',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=20, scale=8),
               existing_nullable=True)
    op.alter_column('prices_eod', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    op.add_column('prices', sa.Column('date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('prices', sa.Column('close_price', sa.NUMERIC(precision=20, scale=8), autoincrement=False, nullable=False))
    op.drop_constraint('uq_price_symbol_ts', 'prices', type_='unique')
    op.drop_index(op.f('ix_prices_symbol'), table_name='prices')
    op.drop_index('ix_price_symbol_ts', table_name='prices')
    op.create_unique_constraint('prices_symbol_date_key', 'prices', ['symbol', 'date'])
    op.alter_column('prices', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    op.drop_column('prices', 'close')
    op.drop_column('prices', 'ts')
    op.alter_column('positions', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    op.alter_column('portfolio_valuations_eod', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('portfolio_valuations_eod', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    # ### end Alembic commands ###
