from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
from starlette.middleware.sessions import SessionMiddleware
from celery import Celery
from app.core.config import settings
from app.routers import health, portfolio, dbtest, portfolio_value, prices_ingest, positions, admin_tasks, admin_eod, portfolio_valuations
from app.routers import admin_eod_sync, symbols_external, ai_portfolio, auth, users, prices_eod, llm_proxy, debug_net, insights_v2, insights_optimized, sentiment, ai_insights_swr, ai_insights_fixed, strategy, news, crypto_quotes, news_ingest, news_read, news_admin, jwt_auth
from app.routers.admin import users_router as admin_users_router
from app.routers import admin_feature_flags, admin_api_providers, admin_rate_limits, admin_schedules, admin_cache_policies, admin_system_settings, admin_audit_log, admin_user_intelligence
from app.database import SessionLocal
from app.db.seed import seed_demo_data

import os
import logging

log = logging.getLogger(__name__)

app = FastAPI(title="AI Portfolio API", version="0.1.0")

# Configure CORS –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ UI
# –ó–∞—á–µ–º: –ü–æ–∑–≤–æ–ª—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É (React/Vite) –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É UI –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ API
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:5173",  # Vite dev server (React frontend)
        "http://127.0.0.1:5173",
        "http://localhost:8080",  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        "http://127.0.0.1:8080",
        "http://localhost:8000",  # –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π UI (FastAPI static files)
        "http://127.0.0.1:8000",
    ],
    allow_credentials=True,  # –†–∞–∑—Ä–µ—à–∞–µ–º cookies –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    allow_methods=["*"],     # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ HTTP –º–µ—Ç–æ–¥—ã (GET, POST, PUT, DELETE)
    allow_headers=["*"],     # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (Content-Type, Authorization)
)

# Session cookie –¥–ª—è OAuth
# Validate SESSION_SECRET in production
if settings.app_env in ("production", "prod"):
    if not settings.session_secret or settings.session_secret in ("dev-secret-change-me", "dev-secret"):
        raise ValueError("SESSION_SECRET must be set to a secure random value in production")
    SESSION_SECRET = settings.session_secret
else:
    SESSION_SECRET = settings.session_secret or "dev-secret-change-me"

app.add_middleware(SessionMiddleware, secret_key=SESSION_SECRET, same_site="lax")

# Activity Tracker –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# –ó–∞—á–µ–º: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ API –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –∫–≤–æ—Ç –∏ –∞—É–¥–∏—Ç–∞
from app.middleware.activity_tracker import ActivityTrackerMiddleware
app.add_middleware(ActivityTrackerMiddleware)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Celery —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
celery_app = None
if not getattr(app.state, "TEST_MODE", False):
    celery_app = Celery(
        "ai-portfolio",
        broker=f"redis://{settings.redis_host}:{settings.redis_port}/0",
        backend=f"redis://{settings.redis_host}:{settings.redis_port}/1",
    )

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∫ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
# –ó–∞—á–µ–º: –ö–∞–∂–¥—ã–π —Ä–æ—É—Ç–µ—Ä –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–≤–æ–∏ endpoints –∫ API
app.include_router(health.router)              # /health - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API
app.include_router(jwt_auth.router)            # /api/auth - JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–ù–û–í–û–ï)
app.include_router(admin_users_router)         # /api/admin/v1 - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–ª—è–º–∏ (admin only)
app.include_router(portfolio.router)           # /portfolio - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è–º–∏
app.include_router(dbtest.router)              # /dbtest - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î
app.include_router(portfolio_value.router)     # /portfolio-value - —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
app.include_router(positions.router)           # /positions - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏—è–º–∏ (JWT protected)
app.include_router(prices_ingest.router)       # /prices-ingest - –∑–∞–≥—Ä—É–∑–∫–∞ —Ü–µ–Ω
app.include_router(prices_eod.router)          # /prices-eod - EOD —Ü–µ–Ω—ã
app.include_router(admin_tasks.router)         # /admin/tasks - –∞–¥–º–∏–Ω—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
app.include_router(admin_eod.router)           # /admin/eod - EOD –∞–¥–º–∏–Ω–∫–∞
app.include_router(admin_eod_sync.router)      # /admin/eod-sync - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è EOD
app.include_router(portfolio_valuations.router) # /portfolio-valuations - –æ—Ü–µ–Ω–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
app.include_router(symbols_external.router)    # /symbols-external - –≤–Ω–µ—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
app.include_router(ai_portfolio.router)        # /ai-portfolio - AI –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è
app.include_router(auth.router)                # /auth - OAuth –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
app.include_router(users.router)               # /users - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
app.include_router(llm_proxy.router)           # /llm - –ø—Ä–æ–∫—Å–∏ –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º LLM —á–µ—Ä–µ–∑ Ollama
app.include_router(insights_v2.router)         # /insights/v2 - –Ω–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è v2
app.include_router(insights_optimized.router)  # /insights - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
app.include_router(sentiment.router)           # /ai/sentiment - –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
app.include_router(ai_insights_swr.router)     # /ai/insights-swr - SWR API —Å –ø–æ–ª–Ω—ã–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
app.include_router(ai_insights_fixed.router)   # /ai/insights/fixed - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π API
app.include_router(strategy.router)            # /strategy - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏
app.include_router(news.router)                # /news - –∞–≥—Ä–µ–≥–∞—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
app.include_router(news_ingest.router)         # /internal/news - –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π API –¥–ª—è –∏–Ω–≥–µ—Å—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
app.include_router(news_read.router)           # /news - —á—Ç–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
app.include_router(news_admin.router)          # /internal/news - –∞–¥–º–∏–Ω API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç—è–º–∏
app.include_router(crypto_quotes.router)       # /crypto/quotes - –∫—Ä–∏–ø—Ç–æ-—Ü–µ–Ω—ã

# Import news cache router
from app.routers import news_cache
app.include_router(news_cache.router)          # /news/cache - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–µ–º –Ω–æ–≤–æ—Å—Ç–µ–π
app.include_router(debug_net.router)           # /debug - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)

# Admin configuration routers (all require admin role)
app.include_router(admin_feature_flags.router)      # /api/admin/v1/feature-flags - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ feature flags
app.include_router(admin_api_providers.router)      # /api/admin/v1/api-providers - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
app.include_router(admin_rate_limits.router)        # /api/admin/v1/rate-limits - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ rate limits –∏ –∫–≤–æ—Ç–∞–º–∏
app.include_router(admin_schedules.router)          # /api/admin/v1/schedules - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è–º–∏ –∑–∞–¥–∞—á
app.include_router(admin_cache_policies.router)     # /api/admin/v1/cache-policies - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
app.include_router(admin_system_settings.router)    # /api/admin/v1/system-settings - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
app.include_router(admin_audit_log.router)          # /api/admin/v1/audit-log - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∞—É–¥–∏—Ç–∞ (read-only)
app.include_router(admin_user_intelligence.router)  # /api/admin/v1 - user intelligence endpoints (portfolio, activity, usage)


# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ UI
# –ó–∞—á–µ–º: –ü–æ–∑–≤–æ–ª—è–µ–º –æ—Ç–∫—Ä—ã–≤–∞—Ç—å HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ FastAPI
ui_dir = os.path.join(os.path.dirname(__file__), "web", "ui")
if os.path.exists(ui_dir):
    app.mount("/ui", StaticFiles(directory=ui_dir, html=True), name="ui")
    print("‚úÖ Embedded UI served at /ui")
    print("üí° LLM Test UI: http://localhost:8000/ui/llm_test.html")


@app.on_event("startup")
def startup_event():
    """Startup event handler"""
    # Add password_hash column if it doesn't exist
    try:
        db = SessionLocal()
        from sqlalchemy import text
        db.execute(text("ALTER TABLE users ADD COLUMN IF NOT EXISTS password_hash VARCHAR(255);"))
        db.commit()
        log.info("Password hash column ensured")
    except Exception as e:
        log.error(f"Failed to add password_hash column: {e}")
    finally:
        db.close()
    
    if os.getenv("SEED_DEMO") == "1":
        log.info("SEED_DEMO=1 detected, seeding demo data...")
        db = SessionLocal()
        try:
            seed_demo_data(db)
        except Exception as e:
            log.error(f"Failed to seed demo data: {e}")
        finally:
            db.close()


@app.get("/", tags=["root"])
def root():
    return {"status": "ok", "env": settings.app_env}

    # --- demo seeding on startup (idempotent) ---
import os
from app.database import SessionLocal
from app.db.seed import seed_positions

if os.getenv("SEED_DEMO", "0") == "1":
    try:
        with SessionLocal() as db:
            seed_positions(db)  # –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–º–æ-–ø–æ–∑–∏—Ü–∏–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        print("[seed] Demo positions ensured")
    except Exception as e:
        print(f"[seed] failed: {e}")
# --- end seeding ---

