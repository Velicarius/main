version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: infra-postgres-1
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: infra-redis-1
    ports:
      - "6379:6379"

  qdrant:
    image: qdrant/qdrant:v1.11.0
    container_name: infra-qdrant-1
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  api:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    container_name: infra-api-1
    env_file:
      - ../.env
    environment:
      SEED_DEMO: "${SEED_DEMO:-0}"   # сидер по умолчанию отключён
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/${POSTGRES_DB:-postgres}"
      OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
      ADMIN_TOKEN: "${ADMIN_TOKEN:-admin123}"
      # Конфигурация Ollama для подключения из Docker контейнера
      OLLAMA_URL: "http://host.docker.internal:11434"
      # Конфигурация Redis для unified cache service
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_DB: "0"
      # OPTIONAL:
      # OPENAI_BASE_URL: "https://api.openai.com/v1"
      # OPENAI_MODEL: "gpt-4o-mini"
    # Настройка для доступа к хосту из контейнера
    # Зачем: extra_hosts обеспечивает устойчивый DNS резолв host.docker.internal в Linux контейнере
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: infra-frontend-1
    ports:
      - "8080:80"
    depends_on:
      - api


volumes:
  pgdata:
  qdrant_data:
